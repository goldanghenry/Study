# 당신은 음식점의 계산을 도와주는 점원이다. 
# 카운터에는 거스름돈으로 사용할 500원, 100원, 50원, 10원짜리 동전이 무한히 존재한다고 가정한다. 
# 손님에게 거슬러 줘야 할 돈이 N원일 때 거슬러줘야 할 동전의 최소 개수를 구하라.
# 단, 거슬러 줘야 할 돈 N은 항상 10의 배수이다.

#------------------------------------------------
# 동작시간 비교
# (1) 직접 : 0.0003094673156738281 -> 동작시간은 빠르지만 코드가 깔끔하지 않다.
# (2) 해설 : 0.0006413459777832031
#------------------------------------------------

# (1) 직접 푼 방법
# 동작 시간 : 0.0003094673156738281

import time
start = time.time()

N = 1260   # 거스름돈
OB = 0  # 500원
B = 0   # 100원
OS = 0  # 50원
S = 0   # 10원

if (N >= 500):
    OB = N // 500
    N %= 500
if (N >= 100):
    B = N // 100
    N %= 100
if (N >= 50):
    OS = N // 50
    N %= 50
if (N >= 10):
    S = N // 10
    N %= 10

print(OB+B+OS+S)

#------------------------------------------------
# (2) 해설
# 동작 시간 : 0.0006413459777832031
n = 1260
count = 0

# 큰 단위의 화폐부터 차례대로 확인
coin_types = [ 500, 100, 50, 10]

for coin in coin_types:
    count += n // coin # 해당 화폐로 거슬러 줄 수 있는 동전의 개수 세기
    n %= coin

print(time.time()-start)
