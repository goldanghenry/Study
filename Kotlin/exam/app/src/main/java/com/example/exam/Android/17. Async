
비동기 -> Async
동기 -> Sync

동기방식
    -> 작업을 순서대로 진행한다. A,B,C 순으로
    -> 윗줄부터 아랫줄로 실행
    -> thread를 만드는데, 처리를 하고 끝난 다음 메인Thread로 돌려주는 기능

비동기 방식
    -> 쓰레드를 만들어서 작업을 따로 처리한다.
    메인 쓰레드
-------------------------------------------------------------------->
                                | 결과를 위로(메인 쓰레드에 작업을 알려준다
            ---------------------
                    작업

안드로이드에서 Async 다루는 방법
    -AsyncTask를 상속받는다
        -> OnPreExcute  : 쓰레드 출발하기 전에 할 작업
        -> doIntBackgound   : 쓰레드가 할 작업
        -> onPregressUpdate : 백그라운드 작업이 몇퍼센터 진행된건지 알려줄 때
                                작업 한칸하고 메인 스레드에 알려줌.
        -> onPostExcute : 작업을 다 마친 후 메인쓰레드

Async의 장점
    - Main Thread를 기다리게 할 필요가 없다.
    - 네트워크 작업을 할 때 많이 쓴다. 외부-> 네이버에 요청이 감. 네이버가 요청을 보냄.
    - 요청을 보내고 받을 시간이 있다. 0.3초가 빈다. 비는 시간을 Async를 쓰면 사용 가능.
    - 서버에 따라 시간이 다르다. 사용하지 않으면 앱이 멍때린다.
    - 안드로이드에서는 항상 비동기방식을 사용해야한다.(main thread가 멈춰선 안되기 때문)

Acync의 단점
    - 재사용이 불가능하다
    - 구현된 Activity가 종료될 경우 따라서 종료되지 않는다.
        사용자가 백버튼을 누르면 작업을 할 필요가 없는데 자동으로 멈추지 않는다.
        그래서 라이프사이클 onPasus()에서 캔슬을 해주어야 한다.
    - AsyncTask는 하나만 실행될 수 있다. 복수개 실행이 안된다.
