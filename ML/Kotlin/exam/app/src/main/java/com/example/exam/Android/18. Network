

네트워크
-> 통신

DataBase <------> Server <------> Client(app,web...)

Local DataBase의 한계
- 동기화가 어렵다. 휴대폰, 태블릿 등 연동이 안된다.
- 상호작용이 불가능 하다. 댓글 다는 것 -> 로컬에서는 불가능.
- 캐쉬, 상호작용이 필요없는 정보를 저장한다.

ex) 넷플릭스
클라이언트가 url로 요청을 보냄. 요청을 담당하는 넷플 서버가 요청에 맞는 응답을 해준다.
클라이언트가 화면을 그린다. 아이콘, 텍스트, 글 모든 데이터는 서버가 전달해주고,
전달 받은 이미지, 글을 포맷에 맞게 그려준다.

사용자 인풋 발생 -> 서버에 요청

서버와 통신하는 방법
 - 해당 url로 요청한다. url로 request 전송
 - 로그인이 되어있으면, 사용자에 맞는 것을 보내줘야 함. 구분하기 위해 인증정보를 보낸다.
 - 데이터를 url로 보내 요청 -> JSON 형식을 사용해서 data를 보낸다.

 JSON Parsing
 - Json을 코틀린이나 자바가 이해할 수 있게 변형하는 과정

Serializable (직렬화 )
- 자바 시스템 내부에서 사용되는 object를 외부에서 사용할 수 있도록 byte형태로 데이터 형태를 바꾸는 것
- 하나의 리스트를 꼬치로. id, name, age, intro 등 꽂아 두는 것을 가져온다
- 코틀린이나 자바로 이해할 수 있는 틀에다 하나씩 빼서 집어 넣기
- 틀 :
    class Person(
        var id : Int? = null
        var name : String? = null
        var age : Int? = null
        var intro : String? = null
        )
- 틀에다가 하나 씩 넣기 키가 변수명. 같은 변수명 - 꼬치 명 데이터를 넣기. Person 생성
= Person(1,"김아무개",20,"안녕하세요)
- 우리는 JSON을 넣을 수 있는 틀을 만들면 system이 알아서 넣어준다.

Request Type(postman 다운)     status code
- GET : 정보 요청               -> 200 ok
- POST : 정보 추가 요청,        -> 201 Created
- DELETE : 정보 삭제 요청
- PUT : 정보 수정 요청

Status Code
- 200번대 -> 처리가 잘 됐다

Library
- Volley : 구글 정식 디벨로퍼 웹 사이트
- Retrofit


