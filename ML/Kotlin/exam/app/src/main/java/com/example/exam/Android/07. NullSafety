NullSafety
    -> Null에 대해서 안전하다(코틀린의 특징)

NUll vs 0
    -> 휴지를 다 썼다. 휴지심은 0
    -> 휴지심도 없는 것 Null : 존재하지 않는 상태, 모르는 상태, 관리 할 수 없는 상태.

Null이 안전하지 않은 이유
    -> 0 + 10 = 10
    -> Null + 10 = ?? error
    -> button.setOnClickListener 장착 가능
    -> Null.setOnClickListener 불가. error
    -> NullPointExceptionError 발생한다

Null 처리하는 방법
    if(number != Null ) {
        number +10
    }
    if(button != Null) {
        button.setOnClickListener
    }
    -> 항상 체크해주어야 한다. 어떻게하면 문법적인 오류로 만들어 줄 수 있을까?
        신텍스 에러 발생하게하는 것이 NullSafety한 언어.

코틀린이 Null Satefy하기 위해서 사용하는 문법
    -> ? : Null이 아니라면 이하 부문 실행
    -> !! : Null이 아님을 개발자가 보장한다. 사용하지 않는 것이 좋다.

button?.setOnClickListener
button!!.setOnClickListener

Null이 될 수 있는 타입
Int, Double, Float, Class -> Null이 될 수 없는 타입
Int?, Double?, Float?, Class? -> Null이 될 수 있는 타입